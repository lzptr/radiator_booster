esphome:
  name: radiator-booster
  friendly_name: "Radiator Booster"
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .local
  use_address: radiator-booster.local
  reboot_timeout: 15min

  # Enable fallback hotspot (captive portal) in case Wi-Fi connection fails
  ap:
    ssid: "Fallback Hotspot"
    password: !secret wifi_ap_password

# Configure I2C for EMC2305
i2c:
  sda: GPIO3  # Adjust these pins according to your wiring
  scl: GPIO4
  scan: true  # Helps with debugging I2C connection
  frequency: 400kHz  # EMC2305 supports up to 400kHz

# EMC2305 Fan Controller
external_components:
  - source: github://lzptr/radiator_booster/firmware/
    ref: feat/esphome
    components: [ emc2305 ]

emc2305:
  id: fan_controller
  update_interval: 5s  # Update RPM readings every 5 seconds
  fan1:
    name: "Radiator Fan 1"
    rpm_sensor: true     # Create sensor in Home Assistant
    min_rpm: 200         # Minimum RPM before considering stalled
    tach_mode: "2_PULSE" # For Noctua fans (2 pulses per revolution)
    pwm_divider: 1       # No frequency division
  fan2:
    name: "Radiator Fan 2"
    rpm_sensor: true
    min_rpm: 200
    tach_mode: "2_PULSE"
    pwm_divider: 1
  fan3:
    name: "Radiator Fan 3"
    rpm_sensor: true
    min_rpm: 200
    tach_mode: "2_PULSE"
    pwm_divider: 1
  fan4:
    name: "Radiator Fan 4"
    rpm_sensor: true
    min_rpm: 200
    tach_mode: "2_PULSE"
    pwm_divider: 1
  fan5:
    name: "Radiator Fan 5"
    rpm_sensor: true
    min_rpm: 200
    tach_mode: "2_PULSE"
    pwm_divider: 1

# Configure the light component
light:
  - platform: binary
    name: "LED"
    output: gpio10_output

# Configure the LED output
output:
  - platform: gpio
    pin: GPIO10
    id: gpio10_output